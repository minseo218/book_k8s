# After installing the test environment

# determine what we need to run kubectl
[root@w3-k8s ~]# kubectl get nodes // checking the connection between the master node and the worker node.
The connection to the server localhost:8080 was refused - did you specify the right host or port?

[root@w3-k8s ~]# scp root@192.168.1.10:/etc/kubernetes/admin.conf .
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
ECDSA key fingerprint is SHA256:l6XikZFgOibzSygqZ6+UYHUnEmjFEFhx7PpZw0I3WaM.
ECDSA key fingerprint is MD5:09:74:43:ef:38:3e:36:a1:7e:51:76:1a:ac:2d:7e:0c.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.1.10' (ECDSA) to the list of known hosts.
root@192.168.1.10's password: 
admin.conf                                                          100% 5452     1.0MB/s   00:00

[root@w3-k8s ~]# kubectl get nodes --kubeconfig admin.conf
NAME     STATUS   ROLES    AGE    VERSION
m-k8s    Ready    master   354d   v1.18.4
w1-k8s   Ready    <none>   354d   v1.18.4
w2-k8s   Ready    <none>   354d   v1.18.4
w3-k8s   Ready    <none>   354d   v1.18.4

# kubelet
[root@m-k8s ~]# kubectl create -f ~/_Book_k8sInfra/ch3/3.1.6/nginx-pod.yaml
pod/nginx-pod created
[root@m-k8s ~]# kubectl get pod
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          44h
[root@m-k8s ~]# kubectl get pods -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP             NODE     NOMINATED NODE   READINESS GATES
nginx-pod   1/1     Running   0          44h   172.16.132.2   w3-k8s   <none>   
        <none>
[root@w3-k8s ~]# systemctl stop kubelet 
[root@m-k8s ~]# kubectl delete pod nginx-pod 
pod "nginx-pod" deleted
^C
[root@m-k8s ~]# kubectl get pod
NAME        READY   STATUS        RESTARTS   AGE
nginx-pod   1/1     Terminating   0          44h
[root@w3-k8s ~]# systemctl start kubelet
[root@m-k8s ~]# kubectl get pod
No resources found in default namespace.

# kube-proxy
[root@m-k8s ~]# kubectl create -f ~/_Book_k8sInfra/ch3/3.1.6/nginx-pod.yaml 
pod/nginx-pod created
[root@m-k8s ~]# kubectl get pod -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP             NODE     NOMINATED NODE   READINESS GATES
nginx-pod   1/1     Running   0          13s   172.16.132.3   w3-k8s   <none>           <none>
[root@m-k8s ~]# curl 172.16.132.3
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
...
[root@w3-k8s ~]# modprobe -r br_netfilter    // remove br_netfilter
[root@w3-k8s ~]# systemctl restart network
[root@m-k8s ~]# curl 172.16.132.3
curl: (7) Failed connect to 172.16.132.3:80; Connection timed out
[root@m-k8s ~]# kubectl get pod -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP             NODE     NOMINATED NODE   READINESS GATES
nginx-pod   1/1     Running   0          13s   172.16.132.3   w3-k8s   <none>   
[root@w3-k8s ~]# modprobe br_netfilter
[root@w3-k8s ~]# reboot
Connection to 192.168.1.103 closed by remote host.
Connection to 192.168.1.103 closed.
[root@m-k8s ~]# kubectl get pod -o wide 
NAME        READY   STATUS    RESTARTS   AGE   IP             NODE     NOMINATED NODE   READINESS GATES
nginx-pod   1/1     Running   1          33m   172.16.132.4   w3-k8s   <none>           <none>
[root@m-k8s ~]# kubectl get pod -o wide  // restart again
NAME        READY   STATUS    RESTARTS   AGE    IP             NODE     NOMINATED NODE   READINESS GATES
nginx-pod   1/1     Running   2          127m   172.16.132.5   w3-k8s   <none>           <none>

# creative pod
[root@m-k8s _Book_k8sInfra]# kubectl run nginx-pod --image=nginx
pod/nginx-pod created
[root@m-k8s _Book_k8sInfra]# kubectl get pod
NAME        READY   STATUS              RESTARTS   AGE
nginx-pod   0/1     ContainerCreating   0          14s
[root@m-k8s _Book_k8sInfra]# kubectl get pod
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          25s
[root@m-k8s _Book_k8sInfra]# kubectl create deployment dpy-nginx --image=nginx
deployment.apps/dpy-nginx created
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME                       READY   STATUS    RESTARTS   AGE
dpy-nginx-c8d778df-68cqn   1/1     Running   0          32s
nginx-pod                  1/1     Running   0          6m27s
[root@m-k8s _Book_k8sInfra]# curl 172.16.132.7
<!DOCTYPE html>
...
[root@m-k8s _Book_k8sInfra]# curl 172.16.132.6
<!DOCTYPE html>
...

# creative deployment
[root@m-k8s _Book_k8sInfra]# kubectl create deployment dpy-hname --image=sysnet4admin/echo-hname
deployment.apps/dpy-hname created
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
dpy-hname-59778b9bb-qhxg4   1/1     Running   0          23s
dpy-nginx-c8d778df-68cqn    1/1     Running   0          68m
nginx-pod                   1/1     Running   0          74m
[root@m-k8s _Book_k8sInfra]# kubectl delete deployment dpy-hname
deployment.apps "dpy-hname" deleted
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME                       READY   STATUS    RESTARTS   AGE
dpy-nginx-c8d778df-68cqn   1/1     Running   0          69m
nginx-pod                  1/1     Running   0          74m

# 레플리카셋으로 파드 수 관리
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME                       READY   STATUS    RESTARTS   AGE
dpy-nginx-c8d778df-68cqn   1/1     Running   0          179m
nginx-pod                  1/1     Running   0          3h5m
[root@m-k8s _Book_k8sInfra]# kubectl scale pod nginx-pod --replicas=3
Error from server (NotFound): the server could not find the requested resource
[root@m-k8s _Book_k8sInfra]# kubectl scale deployment dpy-nginx --replicas=3
deployment.apps/dpy-nginx scaled
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME                       READY   STATUS    RESTARTS   AGE
dpy-nginx-c8d778df-68cqn   1/1     Running   0          3h7m
dpy-nginx-c8d778df-8vxgv   1/1     Running   0          104s
dpy-nginx-c8d778df-pn6v5   1/1     Running   0          104s
nginx-pod                  1/1     Running   0          3h13m
[root@m-k8s _Book_k8sInfra]# kubectl get pods -o wide
NAME                       READY   STATUS    RESTARTS   AGE     IP              NODE     NOMINATED NODE   READINESS GATES
dpy-nginx-c8d778df-68cqn   1/1     Running   0          3h8m    172.16.132.7    w3-k8s   <none>           <none>
dpy-nginx-c8d778df-8vxgv   1/1     Running   0          2m7s    172.16.132.11   w3-k8s   <none>           <none>
dpy-nginx-c8d778df-pn6v5   1/1     Running   0          2m7s    172.16.132.10   w3-k8s   <none>           <none>
nginx-pod                  1/1     Running   0          3h14m   172.16.132.6    w3-k8s   <none>           <none>
[root@m-k8s _Book_k8sInfra]# kubectl delete deployment dpy-nginx
deployment.apps "dpy-nginx" deleted
[root@m-k8s _Book_k8sInfra]# kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          3h16m

# 스펙 지정해서 오브젝트 생성
[root@m-k8s 3.2.4]# cat echo-hname.yaml 
apiVersion: apps/v1     // 오브젝트를 포함하는 api 버전 
kind: Deployment        // 오브젝트 종류
metadata:
  name: echo-hname
  labels:
    app: nginx
spec:
  replicas: 3            // 몇 개의 파드를 생성할 지 결정 
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: echo-hname
        image: sysnet4admin/echo-hname    // 사용되어지는 이미지
[root@m-k8s 3.2.4]# kubectl create -f ~/_Book_k8sInfra/ch3/3.2.4/echo-hname.yaml
deployment.apps/echo-hname created
[root@m-k8s 3.2.4]# kubectl get pod
NAME                        READY   STATUS    RESTARTS   AGE
echo-hname-7894b67f-7dt2g   1/1     Running   0          26s
echo-hname-7894b67f-9qz5l   1/1     Running   0          26s
echo-hname-7894b67f-hmbxm   1/1     Running   0          26s
nginx-pod                   1/1     Running   0          8h
[root@m-k8s 3.2.4]# sed -i 's/replicas: 3/replicas: 6/' ~/_Book_k8sInfra/ch3/3.2.4/echo-hname.yaml
[root@m-k8s 3.2.4]# cat echo-hname.yaml | grep replicas
  replicas: 6
[root@m-k8s 3.2.4]# kubectl create -f echo-hname.yaml 
Error from server (AlreadyExists): error when creating "echo-hname.yaml": deployments.apps "echo-hname" already exists
[root@m-k8s 3.2.4]# kubectl apply -f echo-hname.yaml 
Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply
deployment.apps/echo-hname configured
[root@m-k8s 3.2.4]# kubectl get pod
NAME                        READY   STATUS    RESTARTS   AGE
echo-hname-7894b67f-7dt2g   1/1     Running   0          3m44s
echo-hname-7894b67f-9qz5l   1/1     Running   0          3m44s
echo-hname-7894b67f-hmbxm   1/1     Running   0          3m44s
echo-hname-7894b67f-nzhvg   1/1     Running   0          27s
echo-hname-7894b67f-stndt   1/1     Running   0          27s
echo-hname-7894b67f-xq4vp   1/1     Running   0          27s
nginx-pod                   1/1     Running   0          8h

# feel Self-Healing
[root@m-k8s 3.2.4]# kubectl exec -it nginx-pod -- /bin/bash   // -it : 표준 입력을 명령줄 인터페이스로 작성
                                                              // nginx-pod라는 이름의 파드에 /bin/bash 실행해서 컨테이너 배시 셸 접속
root@nginx-pod:/# i=1; while true; do sleep 1; echo $((i++)) 'curl --silent 172.16.103.132 | grep title' ;done
1 curl --silent 172.16.103.132 | grep title
2 curl --silent 172.16.103.132 | grep title
3 curl --silent 172.16.103.132 | grep title
4 curl --silent 172.16.103.132 | grep title
5 curl --silent 172.16.103.132 | grep title
6 curl --silent 172.16.103.132 | grep title
^C
root@nginx-pod:/# kill 1
root@nginx-pod:/# command terminated with exit code 137
root@nginx-pod:/# i=1; while true; do sleep 1; echo $((i++)) 'curl --silent 172.16.103.132 | grep title' ;done
1 curl --silent 172.16.103.132 | grep title
2 curl --silent 172.16.103.132 | grep title
3 curl --silent 172.16.103.132 | grep title
4 curl --silent 172.16.103.132 | grep title
5 curl --silent 172.16.103.132 | grep title
^C
[root@m-k8s 3.2.4]# kubectl exec -it nginx-pod -- /bin/bash
root@nginx-pod:/# ls -l /run/nginx.pid
-rw-r--r--. 1 root root 2 May 15 12:39 /run/nginx.pid // 현재 시간, 즉 바로 복구

# 파드의 동장 보증 기능
[root@m-k8s 3.2.4]# kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
echo-hname-7894b67f-7dt2g   1/1     Running   0          33m
echo-hname-7894b67f-9qz5l   1/1     Running   0          33m
echo-hname-7894b67f-hmbxm   1/1     Running   0          33m
echo-hname-7894b67f-nzhvg   1/1     Running   0          30m
echo-hname-7894b67f-stndt   1/1     Running   0          30m
echo-hname-7894b67f-xq4vp   1/1     Running   0          30m
nginx-pod                   1/1     Running   2          9h
[root@m-k8s 3.2.4]# kubectl delete pods nginx-pod    // nginx 파드 삭제
pod "nginx-pod" deleted
[root@m-k8s 3.2.4]# kubectl delete pods echo-hname-7894b67f-7dt2g
pod "echo-hname-7894b67f-7dt2g" deleted
[root@m-k8s 3.2.4]# kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
echo-hname-7894b67f-9qz5l   1/1     Running   0          34m
echo-hname-7894b67f-hmbxm   1/1     Running   0          34m
echo-hname-7894b67f-hn7kv   1/1     Running   0          18s
echo-hname-7894b67f-nzhvg   1/1     Running   0          31m
echo-hname-7894b67f-stndt   1/1     Running   0          31m
echo-hname-7894b67f-xq4vp   1/1     Running   0          31m
# nginx-pod는 디플로이먼트에 속한 파드가 아니며 어떤 컨트롤러도 이 파드를 관리하지 않음 -> 다시 생성 안됨
# echo-hname은 디플로이먼트에 속한 파드 -> 파드의 수를 유지 (기존 파드 삭제시 새로운 파드 만듬)
[root@m-k8s 3.2.4]# kubectl delete deployment echo-hname  // 디플로이먼트에 속한 파드를 삭제하기 위해서는 상위 디플로이먼트를 삭제해야 함
deployment.apps "echo-hname" deleted
[root@m-k8s 3.2.4]# kubectl get pods
No resources found in default namespace.

# cordon 기능
[root@m-k8s 3.2.4]# kubectl apply -f echo-hname.yaml 
deployment.apps/echo-hname created
[root@m-k8s 3.2.4]# kubectl scale deployment echo-hname --replicas=9
deployment.apps/echo-hname scaled
